patch:
  page_size: 6 # 候选词个数
  super_comment/candidate_length: 30 # 候选词辅助码提醒的生效长度，0为关闭  但同时清空其它，应当使用上面开关来处理

  switches:
    - name: ascii_mode
      states: [中文, 英文]
      reset: 0
    - name: ascii_punct # 中英标点
      states: [中标, 英标]
    - options: [s2s, s2t, s2hk, s2tw]
      reset: 0
      states: [简体, 通繁, 港繁, 臺繁]
    - name: full_shape
      states: [半角, 全角]
    - name: emoji
      states: [表情关, 表情开]
      reset: 1
    - name: chinese_english
      states: [翻译关, 翻译开]
    - name: tone_display
      states: [声调关, 声调开]
      reset: 1
    - options: [comment_off, fuzhu_hint, tone_hint] #开启后在候选的注释里面实时显示辅助码或者全拼声调，不开启则采用系统配置，影响的是comment_format，快捷键配套ctrl+a,归属：super_comment.lua
      states: [注释关, 辅助开, 读音开]
      reset: 1
    - name: charset_filter
      states: [小字集, 大字集]
      reset: 1
    - name: chaifen_switch
      states: [拆分关, 拆分开]
      reset: 1
    - name: super_tips
      states: [提示关, 提示开]
      reset: 1
    - name: search_single_char # search.lua 的功能开关，辅码查词时是否单字优先
      abbrev: [词, 单]
      states: [正常, 单字]

  # 输入引擎
  engine/processors/@before 3: lua_processor@*select_character # 以词定字，有了辅助码了，想开启可以注释掉

  # 以下两个bool防止表情和翻译下面出现辅助码
  emoji/+:
    inherit_comment: false
  chinese_english/+:
    inherit_comment: false

  # @符号增加邮箱后缀
  punctuator/half_shape/+:
    "@":
      - "@"
      - "@gmail.com"
      - "@outlook.com"
      - "@qq.com"
      - "@163.com"
    "[":
      - "〔"
      - "｛"
      - "〖"
      - "『"
    "]":
      - "〕"
      - "｝"
      - "〗"
      - "』"

  key_binder/tips_key: "Break" # "backslash" # Lua 配置: 超级tips上屏按键
  key_binder/bindings/+: # 也可以再增加方案专有的
    - { when: always, toggle: chinese_english, accept: Control+Shift+f } # 切换翻译功能
    - { when: always, toggle: chaifen_switch, accept: Control+Shift+m } # 切换墨奇音形拆分功能
    - { when: always, toggle: s2s, accept: Control+Shift+t } # 切换简繁
    - { when: always, toggle: super_tips, accept: Control+Shift+s } # 切换超级提示
    - { when: always, toggle: prediction, accept: Control+Shift+p } # 切换预测
    - { when: composing, accept: Control+w, send: Control+BackSpace }
    - { when: has_menu, accept: "Tab", send: "Control+Right" }
    - { when: composing, accept: "Tab", send: "Control+Right" }

    # 自定义翻页，避免输入问题
    - { when: has_menu, accept: Control+Shift+Up, send: Page_Up }
    - { when: has_menu, accept: Control+Shift+Down, send: Page_Down }

  # 拼写设定
  speller/algebra:
    __patch:
      #- 模糊音                                  # 这里启用后，本文件末尾可配置具体条目
      - wanxiang_algebra:/pro/小鹤双拼 # 可选输入方案名称：自然码, 自然龙, 小鹤双拼, 搜狗双拼, 微软双拼, 智能ABC, 紫光双拼, 国标双拼
      - wanxiang_algebra:/pro/直接辅助 #辅助码升级为：直接辅助和间接辅助两种类型，都是句中任意，不同点在于直接辅助是nire=你  而间接则需要/引导  ni/re=你 ，在这个基础上直接辅助支持拼音后任意位置数字声调参与，间接辅助声调在/引导前参与
      #- 自然码提权
  # 中英混合词汇，要与你的双拼类型一样
  cn_en/user_dict: en_dicts/flypy # 可选的值有：en_dicts/pinyin， en_dicts/zrm， en_dicts/flypy ，en_dicts/mspy， en_dicts/sogou

  # 取消注释以开启自动无词频造词
  add_user_dict/enable_auto_phrase: true

  # 自定义短语
  custom_phrase/user_dict: custom_phrase_double # 需要手动创建 custom_phrase_double.txt 文件

  #生日信息：/sr或者osr，在这里定义全局替换构建你的生日查询数据库
  birthday_reminder: #日期格式：必须是4位数字，格式为MMDD（月份和日期），例如：1月27日 → 0127 ，#备注格式：在日期后添加逗号，然后添加任意文本作为备注，例如："0501,我的好朋友"，也可以无备注
    solar_birthdays: # 公历生日, 姓名: "日期,备注" or 姓名: "日期"
      小明: "0501,准备礼物"
      大明: "0405"
    lunar_birthdays: # 农历生日, 姓名: "日期,备注" or 姓名: "日期"
      小明: "0114"
      小红: "0815,农历中秋"

#下面的数据有需要的可以patch引用
#特殊优化：部分音节字极少，几乎不参与构词，则提升对应四码字的优先级，仅对小鹤双拼有效，其他双拼方案需作对应修改）
小鹤双拼提权:
  __append:
    - derive/^(.*?)(\d?);(bl|dx|df|eg|fn|kw|ny|tw|vw|yd|rx|fs|ix)$/$1$3/
    - derive/^(.*?)(\d?);.*?,(bl|dx|df|eg|fn|kw|ny|tw|vw|yd|rx|fs|ix)$/$1$3/
    - derive/^(.*?)(\d?);.*?,.*?,(bl|dx|df|eg|fn|kw|ny|tw|vw|yd|rx|fs|ix)$/$1$3/
    - derive/^(.*?)(\d?);.*?,.*?,.*?,(bl|dx|df|eg|fn|kw|ny|tw|vw|yd|rx|fs|ix)$/$1$3/
#特殊优化：部分音节字极少，几乎不参与构词，则提升对应四码字的优先级，仅对自然码有效，其他双拼方案需作对应修改）
自然码提权:
  __append:
    - derive/^(.*?)(\d?);(bd|dw|df|dw|yl|rw|fs|iw)$/$1$3/
    - derive/^(.*?)(\d?);.*?,(bd|dw|df|dw|yl|rw|fs|iw)$/$1$3/
    - derive/^(.*?)(\d?);.*?,.*?,(bd|dw|df|dw|yl|rw|fs|iw)$/$1$3/
    - derive/^(.*?)(\d?);.*?,.*?,.*?,(bd|dw|df|dw|yl|rw|fs|iw)$/$1$3/
模糊音:
  __append:
    # n - l
    - derive/^l/n
    - derive/^n/l
    # r - y     开头
    - derive/^y/r
    - derive/^r/y
    # h - f     开头
    - derive/^h/f
    - derive/^f/h
    # r - l     开头
    - derive/^r/l
    - derive/^l/r
    # k - g     开头
    - derive/^k/g
    - derive/^g/k
    # an - ang
    - derive/([ui]?)([āáǎàa])ng(.*)$/$1$2n$3
    - derive/([ui]?)([āáǎàa])n(.*)$/$1$2ng$3
    # en - eng
    - derive/([ēéěèe])ng(.*)$/$1n$2
    - derive/([ēéěèe])n(.*)$/$1ng$2
    # in - ing
    - derive/([īíǐìi])ng(.*)$/$1n$2
    - derive/([īíǐìi])n(.*)$/$1ng$2
    # c - ch
    - derive/^c([^h]*)/ch$1
    - derive/^ch/c
    # z - zh
    - derive/^z([^h]*)/zh$1
    - derive/^zh/z
    # s - sh
    - derive/^s([^h]*)/sh$1
    - derive/^sh/s
